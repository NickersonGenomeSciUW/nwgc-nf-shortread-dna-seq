// Needed because github switched the default branch name to "main" from "master" and there is a hardcoded bug in nextflow
manifest.defaultBranch = 'main'

// Default all process(es) to use the parallel environment 'serial'
process.penv = "serial"

// Default pipeline mode (change to 'test' in yaml file if doing a test mode run)
params.mode = 'production'

// Steps to run
params.pipelineStepsToRun = ["mapping", "merging", "qc", "variant_calling", "polymorphic_qc"]
params.qcToRunCustom = ["coverage", "coverage_by_chrom", "contamination", "fingerprint", "picard_multiple_metrics", "samtools_flagstat", "samtools_stats", "collect_and_plot"]

// Optional Inputs
params.isGRC38 = false
params.organism = "Homo sapiens"
params.sequencingPlatform = "Illumina"
params.sequencingCenter = "UW"


// Default lists of chromosome names internal to bed files
params.hg19Chromosomes = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "X", "Y", "MT"]
params.grc38Chromosomes = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9", "chr10", "chr11", "chr12", "chr13", "chr14", "chr15",
                           "chr16", "chr17", "chr18", "chr19", "chr20", "chr21", "chr22", "chrX", "chrY", "chrM"]
// How we refer to chromosomes in our file system
params.fileSystemChromosomeNames = ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9", "chr10", "chr11", "chr12", "chr13", "chr14", "chr15",
                      "chr16", "chr17", "chr18", "chr19", "chr20", "chr21", "chr22", "chrX", "chrY", "chrM"]

// Wgs metrics defaults
params.baseQualityRangeOverride = [0, 10, 20, 30]
params.mappingQualityRangeOverride = [0]

// Software directory
params.softwareDirectory = "/net/nwgc/vol1/software/bin/pegasys"

// process {
//   debug = true
// }

profiles {
	
	instanceSizeLow {
		process {
			withName: 'PICARD_MARK_DUPLICATES' {
				memory = "2G"
			}
			
			withName: 'BASE_RECALIBRATOR' {
				memory = "2G"
			}

			withName: 'APPLY_BQSR' {
				memory = "2G"
			}


			// QC Processes
			withName: 'PICARD_COVERAGE_METRICS' {
				memory = "2G"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				memory = "2G"
			}

			withName: 'PICARD_MULTIPLE_METRICS' {
                memory = "2G"
            }

            withName: 'SAMTOOLS_FLAGSTAT' {
                memory = "2G"
            }

            withName: 'SAMTOOLS_STATS' {
                memory = "2G"
            }

			withName: 'VERIFY_BAM_ID' {
				memory = "2G"
			}

			withName: 'VERIFY_BAM_ID_CUSTOM_TARGET' {
				memory = "2G"
			}

			withName: 'COLLECT_AND_PLOT' {
				memory = "2G"
			}


			// Variant Calling Processes
			withName: 'HAPLOTYPE_CALLER' {
				memory = "2G"
			}
			
			withName: 'ANNOTATE_VARIANTS' {
				memory = "2G"
			}

			withName: 'FILTER_VARIANTS' {
				memory = "2G"
			}

			withName: 'COMBINE_GVCFS' {
				memory = "2G"
			}

			withName: 'COMBINE_FILTERED_GVCFS' {
				memory = "2G"
			}
			
			withName: 'VALIDATE_VARIANTS' {
				memory = "2G"
			}

			
			// Polymorphic QC Processes
			withName: 'BCFTOOLS_GVCF_TO_VCF' {
				memory = "2G"
			}

			withName: 'BCFTOOLS_CREATE_SNPS_ONLY_VCF' {
				memory = "2G"
			}

			withName: 'BCFTOOLS_UNFILTERED_TRANSITION_TRANSVERSION_STATS' {
				memory = "2G"
			}

			withName: 'BCFTOOLS_FILTERED_TRANSITION_TRANSVERSION_STATS' {
				memory = "2G"
			}

			withName: 'BCFTOOLS_HETEROZYGOUS_HOMOZYGOUS_STATS' {
				memory = "2G"
			}

			withName: 'BCFTOOLS_PERCENT_FILTERED_GATK_STATS' {
				memory = "2G"
			}

			
			// Mapping Processes
			withName: 'BWA_SAMSE' {
				memory = "2G"
			}
			withName: 'BWA_SAMPE' {
				memory = "2G"
			}
			withName: 'BWA_MEM_SE' {
				memory = "2G"
			}
			withName: 'BWA_MEM_PE' {
				memory = "2G"
			}
			withName: 'PICARD_CLEAN_SAM' {
				memory = "2G"
			}
			withName: 'FASTX_QC' {
				memory = "2G"
			}
		}
	}

	instanceSizeHigh {
		process {
			withName: 'PICARD_MARK_DUPLICATES' {
				memory = "20G"
			}
			
			withName: 'BASE_RECALIBRATOR' {
				memory = "5G"
			}

			withName: 'APPLY_BQSR' {
				memory = "5G"
			}


			// QC Processes
			withName: 'PICARD_COVERAGE_METRICS' {
				memory = "30G"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				memory = "10G"
			}

			withName: 'PICARD_MULTIPLE_METRICS' {
                memory = "20G"
            }

			withName: 'SAMTOOLS_FLAGSTAT' {
                memory = "2G"
				cpus = 10
            }

            withName: 'SAMTOOLS_STATS' {
                memory = "2G"
				cpus = 10
            }

			withName: 'VERIFY_BAM_ID' {
				memory = "10G"
			}

			withName: 'VERIFY_BAM_ID_CUSTOM_TARGET' {
				memory = "10G"
			}

			withName: 'COLLECT_AND_PLOT' {
				memory = "20G"
			}


			// Variant Calling Processes
			withName: 'HAPLOTYPE_CALLER' {
				memory = "10G"
			}
			
			withName: 'ANNOTATE_VARIANTS' {
				memory = "10G"
			}

			withName: 'FILTER_VARIANTS' {
				memory = "10G"
			}

			withName: 'COMBINE_GVCFS' {
				memory = "10G"
			}

			withName: 'COMBINE_FILTERED_GVCFS' {
				memory = "10G"
			}
			
			withName: 'VALIDATE_VARIANTS' {
				memory = "10G"
			}


			// Polymorphic QC Processes
			withName: 'BCFTOOLS_GVCF_TO_VCF' {
				memory = "10G"
			}

			withName: 'BCFTOOLS_CREATE_SNPS_ONLY_VCF' {
				memory = "10G"
			}

			withName: 'BCFTOOLS_UNFILTERED_TRANSITION_TRANSVERSION_STATS' {
				memory = "10G"
			}

			withName: 'BCFTOOLS_FILTERED_TRANSITION_TRANSVERSION_STATS' {
				memory = "10G"
			}

			withName: 'BCFTOOLS_HETEROZYGOUS_HOMOZYGOUS_STATS' {
				memory = "10G"
			}

			withName: 'BCFTOOLS_PERCENT_FILTERED_GATK_STATS' {
				memory = "10G"
			}
			
			
			// Mapping Processes
			withName: 'BWA_SAMSE' {
				memory = "30G"
				cpus = 4
			}
			withName: 'BWA_SAMPE' {
				memory = "30G"
				cpus = 4
			}
			withName: 'BWA_MEM_SE' {
				memory = "30G"
				cpus = 4
			}
			withName: 'BWA_MEM_PE' {
				memory = "30G"
				cpus = 4
			}
			withName: 'PICARD_CLEAN_SAM' {
				memory = "20G"
			}
			withName: 'FASTX_QC' {
				memory = "20G"
			}
		}
	}

	executorLocal {
		// Executor
		executor.name = 'local'
	}

	executorGridEngine {
		// Executor
		executor.name = 'sge'
		executor.jobName = { "${task.tag}" + "_" + "${task.index}" }

		// Grid Engine
		clusterProject = "dna"
		defaultClusterOptions = "-S /bin/bash -P $clusterProject -m as -r yes -R yes";

		process {
			// Default cluster options with 1 hour run time for all processes
			clusterOptions = "$defaultClusterOptions -l d_rt=0:4:0"

		}
	}

	environmentCentOS7 {

		//  Modules
		initModules = "modules:modules-init:modules-gs"

		bcftoolsModule = "bcftools/1.19"
		bwaModule = "bwa/0.7.15"
		fastxModule = "fastx-toolkit/0.0.14"
		gatk4Module = "GATK/4.2.0.0"
		gatk3Module = "GATK/3.7"
		htslibModule = "htslib/1.16.2"
		pcre2Module = "pcre2/10.39" // R dependency
		perlModule = "perl/5.32.0"
		picardModule = "picard/3.0.0"
		rModule = "R/4.3.1"
		sambambaModule = "sambamba/0.6.8"
		samblasterModule = "samblaster/0.1.24"
		samtoolsModule = "samtools/1.19"
		tabixModule = "tabix/0.2.6"
		verifyBamIdCustomTargetModule = "VerifyBamID/1.1.3"
		verifyBamIdModule =  "VerifyBamID/2.0.1"

		process {
			withName: 'PICARD_MARK_DUPLICATES' {
				module = "${initModules}:${picardModule}"
			}
			
			withName: 'BASE_RECALIBRATOR' {
				module = "${initModules}:${gatk4Module}"
			}

			withName: 'APPLY_BQSR' {
				module = "${initModules}:${gatk4Module}"
			}


			// QC Processes
			withName: 'PICARD_COVERAGE_METRICS' {
				module = "${initModules}:${picardModule}"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				module = "${initModules}:${gatk4Module}"
			}

			withName: 'PICARD_MULTIPLE_METRICS' {
            	module = "${initModules}:${picardModule}:${pcre2Module}:${rModule}"
            }

            withName: 'SAMTOOLS_FLAGSTAT' {
                module = "${initModules}:${samtoolsModule}"
            }

            withName: 'SAMTOOLS_STATS' {
                module = "${initModules}:${samtoolsModule}"
            }

			withName: 'VERIFY_BAM_ID' {
				module = "${initModules}:${htslibModule}:${verifyBamIdModule}"
			}

			withName: 'VERIFY_BAM_ID_CUSTOM_TARGET' {
				module = "${initModules}:${verifyBamIdCustomTargetModule}"
			}

			withName: 'COLLECT_AND_PLOT' {
				module = "${initModules}:${perlModule}:${pcre2Module}:${rModule}"
			}


			// Variant Calling Processes
			withName: 'HAPLOTYPE_CALLER' {
				module = "${initModules}:${gatk4Module}"
			}
			
			withName: 'ANNOTATE_VARIANTS' {
				module = "${initModules}:${gatk3Module}"
			}

			withName: 'FILTER_VARIANTS' {
				module = "${initModules}:${gatk3Module}"
			}

			withName: 'COMBINE_GVCFS' {
				module = "${initModules}:${gatk3Module}:${tabixModule}"
			}

			withName: 'COMBINE_FILTERED_GVCFS' {
				module = "${initModules}:${gatk3Module}:${tabixModule}"
			}
			
			withName: 'VALIDATE_VARIANTS' {
				module = "${initModules}:${gatk3Module}"
			}

			
			// Polymorphic QC Processes
			withName: 'BCFTOOLS_GVCF_TO_VCF' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_CREATE_SNPS_ONLY_VCF' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_UNFILTERED_TRANSITION_TRANSVERSION_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_FILTERED_TRANSITION_TRANSVERSION_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_HETEROZYGOUS_HOMOZYGOUS_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_PERCENT_FILTERED_GATK_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}
			
			
			// Mapping Processes
			withName: 'BWA_SAMSE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'BWA_SAMPE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'BWA_MEM_SE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'BWA_MEM_PE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'PICARD_CLEAN_SAM' {
				module = "${initModules}:${picardModule}:${samtoolsModule}"
			}
			withName: 'FASTX_QC' {
				module = "${initModules}:${fastxModule}"
			}
		}
	}

	environmentUbuntu22 {

		//  Modules
		initModules = "modules:modules-init:modules-gs"

		bcftoolsModule = "bcftools/1.19"
		bwaModule = "bwa/0.7.15"
		fastxModule = "fastx-toolkit/0.0.14"
		gatk4Module = "GATK/4.2.0.0"
		gatk3Module = "GATK/3.7"
		htslibModule = "htslib/1.19"
		perlModule = "perl/5.38.2"
		picardModule = "picard/3.1.1"
		rModule = "R/4.3.2"
		sambambaModule = "sambamba/0.6.8"
		samblasterModule = "samblaster/0.1.26"
		samtoolsModule = "samtools/1.19"
		tabixModule = "tabix/0.2.6"
		verifyBamIdCustomTargetModule = "VerifyBamID/1.1.3"
		verifyBamIdModule =  "VerifyBamID/2.0.1"

		process {
			withName: 'PICARD_MARK_DUPLICATES' {
				module = "${initModules}:${picardModule}"
			}
			
			withName: 'BASE_RECALIBRATOR' {
				module = "${initModules}:${gatk3Module}"
			}

			withName: 'APPLY_BQSR' {
				module = "${initModules}:${gatk3Module}"
			}


			// QC Processes
			withName: 'PICARD_COVERAGE_METRICS' {
				module = "${initModules}:${picardModule}"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				module = "${initModules}:${gatk4Module}"
			}

			withName: 'PICARD_MULTIPLE_METRICS' {
            	module = "${initModules}:${picardModule}:${rModule}"
            }

            withName: 'SAMTOOLS_FLAGSTAT' {
                module = "${initModules}:${samtoolsModule}"
            }

            withName: 'SAMTOOLS_STATS' {
                module = "${initModules}:${samtoolsModule}"
            }

			withName: 'VERIFY_BAM_ID' {
				module = "${initModules}:${htslibModule}:${verifyBamIdModule}"
			}

			withName: 'VERIFY_BAM_ID_CUSTOM_TARGET' {
				module = "${initModules}:${verifyBamIdCustomTargetModule}"
			}

			withName: 'COLLECT_AND_PLOT' {
				module = "${initModules}:${perlModule}:${rModule}"
			}


			// Variant Calling Processes
			withName: 'HAPLOTYPE_CALLER' {
				module = "${initModules}:${gatk4Module}"
			}
			
			withName: 'ANNOTATE_VARIANTS' {
				module = "${initModules}:${gatk3Module}"
			}

			withName: 'FILTER_VARIANTS' {
				module = "${initModules}:${gatk3Module}"
			}

			withName: 'COMBINE_GVCFS' {
				module = "${initModules}:${gatk3Module}:${tabixModule}"
			}

			withName: 'COMBINE_FILTERED_GVCFS' {
				module = "${initModules}:${gatk3Module}:${tabixModule}"
			}
			
			withName: 'VALIDATE_VARIANTS' {
				module = "${initModules}:${gatk3Module}"
			}

			
			// Polymorphic QC Processes
			withName: 'BCFTOOLS_GVCF_TO_VCF' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_CREATE_SNPS_ONLY_VCF' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_UNFILTERED_TRANSITION_TRANSVERSION_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_FILTERED_TRANSITION_TRANSVERSION_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_HETEROZYGOUS_HOMOZYGOUS_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}

			withName: 'BCFTOOLS_PERCENT_FILTERED_GATK_STATS' {
				module = "${initModules}:${bcftoolsModule}"
			}
						
			
			// Mapping Processes
			withName: 'BWA_SAMSE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'BWA_SAMPE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'BWA_MEM_SE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'BWA_MEM_PE' {
				module = "${initModules}:${bwaModule}:${samtoolsModule}:${samblasterModule}:${sambambaModule}"
			}
			withName: 'PICARD_CLEAN_SAM' {
				module = "${initModules}:${picardModule}:${samtoolsModule}"
			}
			withName: 'FASTX_QC' {
				module = "${initModules}:${fastxModule}"
			}
		}
	}

	environmentContainer {
		process {
			withName: 'PICARD_MARK_DUPLICATES' {
				container = "someContainerPath"
			}
		}
	}
}





